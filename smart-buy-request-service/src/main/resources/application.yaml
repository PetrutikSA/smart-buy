server:
  port: 8090
spring:
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        show_sql: true
        use_sql_comments: true
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driverClassName: org.postgresql.Driver
  sql:
    init:
      mode: always
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      bootstrap: ${KAFKA_BOOTSTRAP_SERVERS}
      group-id: request-service-event
      properties:
        spring:
          json:
            trusted:
              packages: ru.petrutik.smartbuy.event.request
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      #key-serializer: org.apache.kafka.common.serialization.LongSerializer
      #value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
logging:
  level:
    org:
      springframework:
        orm:
          jpa: INFO
          jpa.JpaTransactionManager: DEBUG
        transaction: INFO
        transaction.interceptor: TRACE
smartbuy:
  kafka:
    topic:
      name:
        user:
          request: user-request-topic
          response: user-response-topic